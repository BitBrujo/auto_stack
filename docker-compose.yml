version: '3.8'

services:
  # DuckDNS Dynamic DNS Update Service
  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - SUBDOMAINS=humanintheloop # your subdomain without .duckdns.org
      - TOKEN=your-duckdns-token-here # Get from https://www.duckdns.org/
      - UPDATE_IP=ipv4
      - LOG_FILE=false
    volumes:
      - ./duckdns:/config
    restart: unless-stopped

  # Caddy Reverse Proxy with Automatic HTTPS
  caddy:
    image: caddy:2-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy/data:/data
      - ./caddy/config:/config
    environment:
      - DOMAIN=humanintheloop.xyz
    depends_on:
      - n8n
      - supabase-kong

  # PostgreSQL Database for Supabase
  db:
    image: supabase/postgres:15.1.0.117
    container_name: supabase-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
      - -c
      - log_min_messages=fatal
    environment:
      POSTGRES_HOST: /var/run/postgresql
      PGPORT: 5432
      POSTGRES_PORT: 5432
      PGPASSWORD: your-postgres-password
      POSTGRES_PASSWORD: your-postgres-password
      PGDATABASE: postgres
      POSTGRES_DB: postgres
      PGUSER: supabase_admin
      POSTGRES_USER: supabase_admin
      POSTGRES_INITDB_ARGS: --auth-host=md5
    volumes:
      - ./supabase/db/data:/var/lib/postgresql/data:Z
      - ./supabase/db/init:/docker-entrypoint-initdb.d:Z

  # Supabase Studio
  studio:
    image: supabase/studio:20231103-ce42139
    container_name: supabase-studio
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      STUDIO_PG_META_URL: http://meta:8080
      POSTGRES_PASSWORD: your-postgres-password
      DEFAULT_ORGANIZATION_NAME: Default Organization
      DEFAULT_PROJECT_NAME: Default Project
      SUPABASE_URL: http://supabase-kong:8000
      SUPABASE_PUBLIC_URL: https://humanintheloop.xyz
      SUPABASE_ANON_KEY: your-anon-key-here
      SUPABASE_SERVICE_KEY: your-service-key-here

  # Supabase Kong API Gateway
  supabase-kong:
    image: kong:2.8.1
    container_name: supabase-kong
    restart: unless-stopped
    ports:
      - "8000:8000/tcp"
      - "8443:8443/tcp"
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
    volumes:
      - ./supabase/config/kong.yml:/var/lib/kong/kong.yml:ro

  # Supabase Auth
  auth:
    image: supabase/gotrue:v2.99.0
    container_name: supabase-auth
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: https://humanintheloop.xyz
      
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://supabase_auth_admin:your-postgres-password@db:5432/postgres
      
      GOTRUE_SITE_URL: https://humanintheloop.xyz
      GOTRUE_URI_ALLOW_LIST: https://humanintheloop.xyz
      GOTRUE_DISABLE_SIGNUP: false
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_SECRET: your-jwt-secret-here
      
      GOTRUE_EXTERNAL_EMAIL_ENABLED: true
      GOTRUE_MAILER_AUTOCONFIRM: false
      GOTRUE_SMTP_ADMIN_EMAIL: admin@humanintheloop.xyz
      GOTRUE_SMTP_HOST: smtp.gmail.com
      GOTRUE_SMTP_PORT: 587
      GOTRUE_SMTP_USER: your-email@gmail.com
      GOTRUE_SMTP_PASS: your-email-password
      GOTRUE_SMTP_SENDER_NAME: humanintheloop.xyz
      GOTRUE_MAILER_URLPATHS_INVITE: https://humanintheloop.xyz/auth/v1/verify
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: https://humanintheloop.xyz/auth/v1/verify
      GOTRUE_MAILER_URLPATHS_RECOVERY: https://humanintheloop.xyz/auth/v1/verify

  # Supabase REST API
  rest:
    image: postgrest/postgrest:v11.2.0
    container_name: supabase-rest
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://authenticator:your-postgres-password@db:5432/postgres
      PGRST_DB_SCHEMAS: public,storage,graphql_public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: your-jwt-secret-here
      PGRST_DB_USE_LEGACY_GUCS: "false"

  # Supabase Realtime
  realtime:
    image: supabase/realtime:v2.19.3
    container_name: supabase-realtime
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      PORT: 4000
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: supabase_admin
      DB_PASSWORD: your-postgres-password
      DB_NAME: postgres
      DB_AFTER_CONNECT_QUERY: 'SET search_path TO _realtime'
      DB_ENC_KEY: supabaserealtime
      API_JWT_SECRET: your-jwt-secret-here
      FLY_ALLOC_ID: fly123
      FLY_APP_NAME: realtime
      SECRET_KEY_BASE: UpNVntn3cDxHJpq99YMc1T1AQgQpc8kfYTuRgBiYa15BLrx8etQoXz3gZv1/u2oq
      ERL_AFLAGS: -proto_dist inet_tcp
      ENABLE_TAILSCALE: false
      DNS_NODES: "''"

  # Supabase Storage
  storage:
    image: supabase/storage-api:v0.40.4
    container_name: supabase-storage
    depends_on:
      db:
        condition: service_healthy
      rest:
        condition: service_started
    restart: unless-stopped
    environment:
      ANON_KEY: your-anon-key-here
      SERVICE_KEY: your-service-key-here
      POSTGREST_URL: http://rest:3000
      PGRST_JWT_SECRET: your-jwt-secret-here
      DATABASE_URL: postgres://supabase_storage_admin:your-postgres-password@db:5432/postgres
      FILE_SIZE_LIMIT: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      TENANT_ID: stub
      REGION: stub
      GLOBAL_S3_BUCKET: stub
      ENABLE_IMAGE_TRANSFORMATION: true
      IMGPROXY_URL: http://imgproxy:5001
    volumes:
      - ./supabase/storage:/var/lib/storage:z

  # Supabase Image Proxy
  imgproxy:
    image: darthsim/imgproxy:v3.8.0
    container_name: supabase-imgproxy
    restart: unless-stopped
    environment:
      IMGPROXY_BIND: ":5001"
      IMGPROXY_LOCAL_FILESYSTEM_ROOT: /
      IMGPROXY_USE_ETAG: true
      IMGPROXY_ENABLE_WEBP_DETECTION: true
    volumes:
      - ./supabase/storage:/var/lib/storage:z

  # Supabase Meta
  meta:
    image: supabase/postgres-meta:v0.68.0
    container_name: supabase-meta
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: db
      PG_META_DB_PORT: 5432
      PG_META_DB_NAME: postgres
      PG_META_DB_USER: supabase_admin
      PG_META_DB_PASSWORD: your-postgres-password

  # n8n Workflow Automation
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    restart: unless-stopped
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n_user
      - DB_POSTGRESDB_PASSWORD=n8n_password
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=your-n8n-password
      - N8N_HOST=humanintheloop.xyz
      - N8N_PROTOCOL=https
      - N8N_PORT=5678
      - WEBHOOK_URL=https://humanintheloop.xyz/
      - GENERIC_TIMEZONE=UTC
    ports:
      - "5678:5678"
    volumes:
      - ./n8n:/home/node/.n8n
    depends_on:
      - db

volumes:
  db_data:
  n8n_data:

networks:
  default:
    name: supabase_default
